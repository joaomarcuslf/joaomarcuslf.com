name: Deploy Next.js site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate_webp:
    name: Generate WebP and Thumbnails
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository 🛎️
        uses: actions/checkout@v4

      - name: Set up Python 🐍
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install Pillow 📦
        run: |
          python -m pip install --upgrade pip
          pip install pillow

      - name: Generate WebP Images 🖼️
        run: |
          python scripts/create_webp.py
          python scripts/create_thumbnails.py

      - name: Commit Generated Images 🚀
        uses: EndBug/add-and-commit@v7
        with:
          message: "Auto-generated WebP and thumbnails"
          add: "./public/images"

  build:
    name: Build Next.js Site
    runs-on: ubuntu-latest
    needs: generate_webp
    steps:
      - name: Checkout Repository 🛎️
        uses: actions/checkout@v4

      - name: Detect Package Manager 🔍
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
          else
            echo "Unable to determine package manager"
            exit 1
          fi

      - name: Set up Node.js 🟢
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Set up GitHub Pages 📄
        uses: actions/configure-pages@v5
        with:
          static_site_generator: next

      - name: Restore Cache 🗄️
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install Dependencies 📦
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Build Next.js Project 🏗️
        run: ${{ steps.detect-package-manager.outputs.runner }} next build

      - name: Upload Artifact 📤
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    name: Deploy to GitHub Pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v4
